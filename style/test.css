/**###########################################################
#############################################################

Test for Menstruation Graph
**/
@property --degree { syntax: "<angle>"; inherits: false; initial-value: 0deg }

* { box-sizing: border-box }
html, body { height: 100%; margin: 0 }
body { display: grid; place-items: center; background-color: #112e14; padding: 1rem }

.diagram {
  width: min(30rem, 100%);
  display: grid;
  grid-template-columns: 1fr auto;
  column-gap: 1rem;
}

@media (width < 20rem ){ 
  .diagram { grid-template-columns: 1fr; place-items: center }
}

.diagram > .item { display: contents }

/* diagram */
.diagram > .item::after {
  content: "";
  grid-column: 1;
  place-self: center;
  grid-row: 1/calc(var(--items) + 1);
  width: 100%;
  aspect-ratio: 1;
  border-radius: 50%;
  pointer-events: none;
  
  --degree: calc(360deg * var(--perc));
  background-image: 
    conic-gradient( 
      from 0deg,
      var(--clr) var(--degree), 
      transparent calc(var(--degree) + 0.25deg)
    );
  
  --width: calc(50% / (var(--items) + .5));
  --start: calc(var(--width) * 0.5 + var(--width) * var(--idx));
  --stop: calc(var(--start) + var(--width));
  --mask-image: radial-gradient(
    100% 100%,
    transparent 0 calc(var(--start) - 1px), 
    rgb(0, 0, 0) var(--start) var(--stop), 
    transparent calc(var(--stop) + 1px)
  );
  -webkit-mask-image: var(--mask-image);
  
  opacity: var(--opacity, 1);
  transition: opacity 250ms ease;
  animation: degreeIn 5s ease;
}
@keyframes degreeIn {
  from { --degree: 0deg }
}
/* label */
.diagram > .item > label { 
  display: flex; 
  gap: 0.5rem; 
  color: #ffffff; 
  font-family: system-ui, sans-serif;
  align-items: center;
  padding-block: 0.5rem;
}
.diagram > .item > label::before { 
  content: "â–£"; 
  color: var(--clr) 
}

/* hover */
.diagram > .item:where(:hover,:focus) > label{ 
  color: var(--clr) 
}
/* hover label, decrease opacity other items*/
.diagram:has(>.item>label:where(:hover,:focus)) > .item:not(:where(:hover,:focus))::after{
 --opacity: 0.1
}
/* fallback rules that contain :has() */
@supports not selector(:has(p)){
  .diagram:hover > :not(.item:where(:hover, :focus))::after { --opacity: 0.1 }
}
